{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/dashboard/dashboard.module.ts","webpack:///./src/app/dashboard/dashboard.routes.ts","webpack:///./src/app/dashboard/home/home.component.css","webpack:///./src/app/dashboard/home/home.component.html","webpack:///./src/app/dashboard/home/home.component.ts","webpack:///./src/app/dashboard/layout/layout.component.css","webpack:///./src/app/dashboard/layout/layout.component.html","webpack:///./src/app/dashboard/layout/layout.component.ts","webpack:///./src/app/dashboard/new-post/new-post.component.css","webpack:///./src/app/dashboard/new-post/new-post.component.html","webpack:///./src/app/dashboard/new-post/new-post.component.ts","webpack:///./src/app/directives/validate-equal.directive.ts","webpack:///./src/app/guards/auth-guard.service.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/models/index.ts","webpack:///./src/app/models/post.ts","webpack:///./src/app/models/user.ts","webpack:///./src/app/page-notfound/page-notfound.component.css","webpack:///./src/app/page-notfound/page-notfound.component.html","webpack:///./src/app/page-notfound/page-notfound.component.ts","webpack:///./src/app/registration/registration.component.css","webpack:///./src/app/registration/registration.component.html","webpack:///./src/app/registration/registration.component.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/post.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { PageNotfoundComponent } from './page-notfound/page-notfound.component';\n\nexport const APP_ROUTES: Routes = [\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegistrationComponent},\n  { path: '', redirectTo: 'dashboard', pathMatch: 'full' },\n  { path: '**', component: PageNotfoundComponent }\n];\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div id=\\\"page-header\\\">\\n  <h1>Pretend App</h1>\\n</div>\\n<div id=\\\"body\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'public';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { EqualValidator } from './directives/validate-equal.directive';\n\nimport { CookieModule } from 'ngx-cookie';\n\nimport { RouterModule } from '@angular/router';\nimport { APP_ROUTES } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { PageNotfoundComponent } from './page-notfound/page-notfound.component';\n\nimport { AuthService } from './services/auth.service';\nimport { DashboardModule } from './dashboard/dashboard.module';\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegistrationComponent,\n    PageNotfoundComponent,\n    EqualValidator\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(APP_ROUTES),\n    DashboardModule,\n    FormsModule,\n    HttpClientModule,\n    CookieModule.forRoot(),\n  ],\n  providers: [AuthService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LayoutComponent } from './layout/layout.component';\nimport { HomeComponent } from './home/home.component';\nimport { RouterModule } from '@angular/router';\nimport { dashboardRoutes } from './dashboard.routes';\nimport { NewPostComponent } from './new-post/new-post.component';\n\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AuthGuard } from '../guards/auth-guard.service';\n\n@NgModule({\n  declarations: [LayoutComponent, HomeComponent, NewPostComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(dashboardRoutes),\n    FormsModule,\n    HttpClientModule,\n  ],\n  providers: [AuthGuard],\n})\nexport class DashboardModule { }\n","import { Routes } from '@angular/router';\nimport { LayoutComponent } from './layout/layout.component';\nimport { HomeComponent } from './home/home.component';\nimport { NewPostComponent } from './new-post/new-post.component';\n\nimport { AuthGuard } from '../guards/auth-guard.service';\n\nexport const dashboardRoutes: Routes = [\n  {\n    path: 'dashboard',\n    component: LayoutComponent,\n    canActivate: [AuthGuard],\n    children: [\n      { path: '', redirectTo: 'home', pathMatch: 'full' },\n      { path: 'home', component: HomeComponent },\n      { path: 'new/post', component: NewPostComponent }\n    ]\n  }\n];\n","module.exports = \"#wrapper {\\n  align-content: center;\\n  width: 98%;\\n  padding: 10px;\\n  margin-right: auto;\\n  margin-left: auto;\\n  overflow: scroll;\\n  height: 680px;\\n}\\n#leftpic {\\n  width: 40%;\\n  display: inline-block;\\n}\\n.crop {\\n  height: 250px;\\n  width: 100%;\\n  overflow: hidden;\\n  margin-left: auto;\\n  margin-right: auto;\\n}\\n.crop img {\\n  height: 100%;\\n  width: auto;\\n}\\n#rightcontent {\\n  width: 60%;\\n  display: inline-block;\\n  align-content: center;\\n  vertical-align: top;\\n  text-align: center;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGFzaGJvYXJkL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UscUJBQXFCO0VBQ3JCLFVBQVU7RUFDVixhQUFhO0VBQ2Isa0JBQWtCO0VBQ2xCLGlCQUFpQjtFQUNqQixnQkFBZ0I7RUFDaEIsYUFBYTtBQUNmO0FBQ0E7RUFDRSxVQUFVO0VBQ1YscUJBQXFCO0FBQ3ZCO0FBQ0E7RUFDRSxhQUFhO0VBQ2IsV0FBVztFQUNYLGdCQUFnQjtFQUNoQixpQkFBaUI7RUFDakIsa0JBQWtCO0FBQ3BCO0FBQ0E7RUFDRSxZQUFZO0VBQ1osV0FBVztBQUNiO0FBQ0E7RUFDRSxVQUFVO0VBQ1YscUJBQXFCO0VBQ3JCLHFCQUFxQjtFQUNyQixtQkFBbUI7RUFDbkIsa0JBQWtCO0FBQ3BCIiwiZmlsZSI6InNyYy9hcHAvZGFzaGJvYXJkL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiI3dyYXBwZXIge1xuICBhbGlnbi1jb250ZW50OiBjZW50ZXI7XG4gIHdpZHRoOiA5OCU7XG4gIHBhZGRpbmc6IDEwcHg7XG4gIG1hcmdpbi1yaWdodDogYXV0bztcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIG92ZXJmbG93OiBzY3JvbGw7XG4gIGhlaWdodDogNjgwcHg7XG59XG4jbGVmdHBpYyB7XG4gIHdpZHRoOiA0MCU7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cbi5jcm9wIHtcbiAgaGVpZ2h0OiAyNTBweDtcbiAgd2lkdGg6IDEwMCU7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICBtYXJnaW4tcmlnaHQ6IGF1dG87XG59XG4uY3JvcCBpbWcge1xuICBoZWlnaHQ6IDEwMCU7XG4gIHdpZHRoOiBhdXRvO1xufVxuI3JpZ2h0Y29udGVudCB7XG4gIHdpZHRoOiA2MCU7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgYWxpZ24tY29udGVudDogY2VudGVyO1xuICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG4iXX0= */\"","module.exports = \"<div id=\\\"wrapper\\\" *ngIf='posts'>\\n  <div id=\\\"posts\\\" *ngFor=\\\"let p of posts\\\">\\n    <fieldset>\\n      <legend>{{ p.title }}</legend>\\n      <div id=\\\"leftpic\\\">\\n        <div class=\\\"crop\\\">\\n          <img src=\\\"{{ p.url }}\\\" alt=\\\"a picture\\\" />\\n        </div>\\n      </div>\\n      <div id=\\\"rightcontent\\\">\\n        <h5>{{ p.content }}</h5>\\n      </div>\\n    </fieldset>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport { Post } from '../../models';\n\nimport { PostService } from '../../services/post.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  posts: Post[] = [];\n  constructor(private readonly _post: PostService) { }\n\n  ngOnInit() {\n    console.log(this._post);\n    this._post.getPosts().subscribe(posts => {\n      console.log('Got our data ', posts);\n      console.log('This is the this ', this);\n      this.posts = posts;\n    });\n  }\n\n}\n","module.exports = \"button {\\n  background:none!important;\\n  color: blue;\\n  border:none;\\n  padding:0!important;\\n  font: inherit;\\n  /*border is optional*/\\n  border-bottom:1px solid blue;\\n  cursor: pointer;\\n}\\na {\\n  background:none!important;\\n  color: blue;\\n  border:none;\\n  padding:0!important;\\n  text-decoration: none;\\n  font: inherit;\\n  /*border is optional*/\\n  border-bottom:1px solid blue;\\n  cursor: pointer;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGFzaGJvYXJkL2xheW91dC9sYXlvdXQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLHlCQUF5QjtFQUN6QixXQUFXO0VBQ1gsV0FBVztFQUNYLG1CQUFtQjtFQUNuQixhQUFhO0VBQ2IscUJBQXFCO0VBQ3JCLDRCQUE0QjtFQUM1QixlQUFlO0FBQ2pCO0FBQ0E7RUFDRSx5QkFBeUI7RUFDekIsV0FBVztFQUNYLFdBQVc7RUFDWCxtQkFBbUI7RUFDbkIscUJBQXFCO0VBQ3JCLGFBQWE7RUFDYixxQkFBcUI7RUFDckIsNEJBQTRCO0VBQzVCLGVBQWU7QUFDakIiLCJmaWxlIjoic3JjL2FwcC9kYXNoYm9hcmQvbGF5b3V0L2xheW91dC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiYnV0dG9uIHtcbiAgYmFja2dyb3VuZDpub25lIWltcG9ydGFudDtcbiAgY29sb3I6IGJsdWU7XG4gIGJvcmRlcjpub25lO1xuICBwYWRkaW5nOjAhaW1wb3J0YW50O1xuICBmb250OiBpbmhlcml0O1xuICAvKmJvcmRlciBpcyBvcHRpb25hbCovXG4gIGJvcmRlci1ib3R0b206MXB4IHNvbGlkIGJsdWU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cbmEge1xuICBiYWNrZ3JvdW5kOm5vbmUhaW1wb3J0YW50O1xuICBjb2xvcjogYmx1ZTtcbiAgYm9yZGVyOm5vbmU7XG4gIHBhZGRpbmc6MCFpbXBvcnRhbnQ7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgZm9udDogaW5oZXJpdDtcbiAgLypib3JkZXIgaXMgb3B0aW9uYWwqL1xuICBib3JkZXItYm90dG9tOjFweCBzb2xpZCBibHVlO1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG4iXX0= */\"","module.exports = \"<h3>Dashboard Layout</h3>\\n    <p>\\n      <a routerLink=\\\"home\\\" >Home</a> |\\n      <a routerLink=\\\"new/post\\\"> Create New Post </a> |\\n      <button (click)=\\\"logout()\\\">Logout</button>\\n    </p>\\n<router-outlet></router-outlet>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.css']\n})\nexport class LayoutComponent implements OnInit {\n  isAuthed = false;\n\n  constructor(\n    private readonly auth: AuthService,\n    private readonly router: Router\n  ) {}\n\n  ngOnInit() {\n    this.auth.isAuthed$.subscribe(isLogged => {\n      console.log(isLogged);\n      this.isAuthed = isLogged;\n    });\n  }\n\n  logout() {\n    this.auth.logout().subscribe(() => {\n      this.router.navigateByUrl('/login');\n    });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC9uZXctcG9zdC9uZXctcG9zdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div id=\\\"newpost\\\">\\n  <div *ngIf=\\\"postErrors.length\\\">\\n    <ul class=\\\"alert alert-danger\\\">\\n      <li *ngFor=\\\"let error of postErrors\\\">{{ error }}</li>\\n    </ul>\\n  </div>\\n  <form (submit)=\\\"onSubmit($event, addPost.value)\\\"\\n  #addPost=\\\"ngForm\\\"\\n  class=\\\"form-group\\\"\\n  autocomplete=\\\"off\\\">\\n  <fieldset>\\n    <legend>Create A New Post</legend>\\n    <div class=\\\"form-control\\\">\\n      <label for=\\\"title\\\">Title: </label>\\n      <input type=\\\"text\\\"\\n      name=\\\"title\\\"\\n      #title=\\\"ngModel\\\"\\n      [(ngModel)]=\\\"post.title\\\">\\n    </div>\\n    <div class=\\\"form-control\\\">\\n      <label for=\\\"content\\\">Content: </label>\\n      <input type=\\\"text\\\"\\n      name=\\\"content\\\"\\n      #content=\\\"ngModel\\\"\\n      [(ngModel)]=\\\"post.content\\\">\\n    </div>\\n    <div class=\\\"form-control\\\">\\n      <label for=\\\"url\\\">Image Url: </label>\\n      <input type=\\\"text\\\"\\n      name=\\\"url\\\"\\n      #url=\\\"ngModel\\\"\\n      [(ngModel)]=\\\"post.url\\\">\\n    </div>\\n    <div class=\\\"form-control\\\">\\n      <button>Add Post</button>\\n    </div>\\n  </fieldset>\\n  </form>\\n</div>\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\nimport { Post } from '../../models';\nimport { PostService } from '../../services/post.service';\n\n@Component({\n  selector: 'app-new-post',\n  templateUrl: './new-post.component.html',\n  styleUrls: ['./new-post.component.css']\n})\nexport class NewPostComponent implements OnInit, OnDestroy {\n  post = new Post();\n  sub: Subscription;\n  postErrors: string[] = [];\n\n  constructor(\n    private readonly _post: PostService,\n    private readonly router: Router\n  ) { }\n\n  ngOnInit() { }\n\n  onSubmit(event: Event, post: Post) {\n    event.preventDefault();\n    this.sub = this._post.addPost(post).subscribe(\n      newPost => {\n        console.log(newPost);\n        this.router.navigateByUrl('dashboard');\n      },\n      error => {\n        console.log(error);\n        this.handleErrors(error.error);\n      }\n    );\n  }\n\n  ngOnDestroy() {\n    if (this.sub) {\n      this.sub.unsubscribe();\n    }\n  }\n\n  private handleErrors(error: string | string[]) {\n    this.postErrors = Array.isArray(error) ? error : [error];\n  }\n}\n","import { Directive, forwardRef, Provider, Attribute} from '@angular/core';\nimport { Validator, AbstractControl, NG_VALIDATORS } from '@angular/forms';\n\n@Directive({\n// tslint:disable-next-line: directive-selector\n  selector: `[validateEqual][formControlName],[validateEqual][formControl],[validateEqual][ngModel]`\n})\nexport class EqualValidator implements Validator {\n\n  constructor(\n    @Attribute('validateEqual') public validateEqual: string,\n    @Attribute('reverse') public reverse: string) { }\n\n  private get isReverse() {\n    if (!this.reverse) {\n      return false;\n    } else {\n      return this.reverse === 'true' ? true : false;\n    }\n  }\n\n  validate(c: AbstractControl): { [key: string]: any } {\n    // self value (e.g. retype password)\n    let v = c.value;\n\n    // control value (e.g. password)\n    let e = c.root.get(this.validateEqual);\n\n    // value not equal\n    if (e && v !== e.value && !this.isReverse) {\n      return {\n        validateEqual: false\n      };\n    }\n    // value equal and reverse\n    if (e && v === e.value && this.isReverse) {\n      delete e.errors['validateEqual'];\n      if (!Object.keys(e.errors).length) {\n        e.setErrors(null);\n      }\n    }\n\n    // value not equal and reverse\n    if (e && v !== e.value && this.isReverse) {\n      e.setErrors({ validateEqual: false})\n    }\n\n    return null;\n  }\n\n}\n","import { AuthService } from './../services/auth.service';\nimport { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router, Route } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate{\n\n  constructor(private auth: AuthService, private _router: Router) {\n  }\n\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    if (this.auth.isAuthed()) {\n        return true;\n    }\n\n    // navigate to login page\n    this._router.navigate(['/login']);\n    // you can save redirect url so after authing we can move them back to the page they requested\n    return false;\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div id=\\\"loginForm\\\">\\n  <a style='text-align: right;' routerLink='/register'>New User</a>\\n    <div *ngIf=\\\"errors.length\\\">\\n      <ul class=\\\"alert alert-danger\\\">\\n        <li *ngFor=\\\"let error of errors\\\">{{ error }}</li>\\n      </ul>\\n    </div>\\n  <form (submit)=\\\"onSubmit(login.value)\\\" #login=\\\"ngForm\\\" class=\\\"form-group\\\">\\n    <fieldset>\\n      <legend>Login</legend>\\n      <div class=\\\"form-control\\\">\\n        <label for=\\\"email\\\">Email: </label>\\n        <input\\n        type=\\\"text\\\"\\n        name=\\\"email\\\"\\n        #name=\\\"ngModel\\\"\\n        [(ngModel)]=\\\"user.email\\\"\\n        >\\n      </div>\\n      <br>\\n      <div class=\\\"form-control\\\">\\n        <label for=\\\"password\\\">Password: </label>\\n        <input\\n        type=\\\"password\\\"\\n        name=\\\"password\\\"\\n        #password=\\\"ngModel\\\"\\n        [(ngModel)]=\\\"user.password\\\"\\n        minlength=\\\"8\\\">\\n      </div>\\n      <div class=\\\"form-control\\\">\\n        <button *ngIf=\\\"login.valid\\\">Login</button>\\n      </div>\\n    </fieldset>\\n  </form>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\nimport { User } from '../models';\nimport { AuthService } from '../services/auth.service';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  user = new User();\n  errors: string[] = [];\n\n  constructor(\n    private readonly router: Router,\n    private readonly auth: AuthService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  onSubmit(user: User) {\n    console.log('logging in ', user);\n    this.auth.login(user).subscribe(\n      loggedUser => {\n        console.log('logged ', loggedUser);\n        this.router.navigateByUrl('/dashboard');\n      },\n      error => {\n        console.log('got an error ', error.error);\n        this.handleErrors(error.error);\n      }\n    );\n  }\n\n  private handleErrors(errors: string[] | string) {\n    this.errors = Array.isArray(errors) ? errors : [errors];\n  }\n\n}\n","export * from './user';\nexport * from './post';\n\n","export class Post {\n  _id: string;\n  userid: string;\n  title: string;\n  content: string;\n  url: string;\n}\n","export class User {\n  _id: string;\n  firstName: string;\n  lastName: string;\n  email: string;\n  password: string;\n  confirmPassword: string;\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2Utbm90Zm91bmQvcGFnZS1ub3Rmb3VuZC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<p>\\n  page-notfound works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-notfound',\n  templateUrl: './page-notfound.component.html',\n  styleUrls: ['./page-notfound.component.css']\n})\nexport class PageNotfoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdHJhdGlvbi9yZWdpc3RyYXRpb24uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div id=\\\"registration\\\">\\n  <a style='text-align: right;' routerLink='/login'>Returning User?</a>\\n  <div *ngIf=\\\"registrationErrors.length\\\">\\n    <ul class=\\\"alert alert-danger\\\">\\n      <li *ngFor=\\\"let error of registrationErrors\\\">{{ error }}</li>\\n    </ul>\\n  </div>\\n  <form (submit)=\\\"onSubmit($event, register.value)\\\"\\n  #register=\\\"ngForm\\\"\\n  class=\\\"form-group\\\"\\n  autocomplete=\\\"off\\\" >\\n    <fieldset>\\n      <legend>Registration</legend>\\n      <div class=\\\"form-control\\\">\\n        <label for=\\\"firstName\\\">First Name: </label>\\n        <input type=\\\"text\\\"\\n        name=\\\"firstName\\\"\\n        #firstName=\\\"ngModel\\\"\\n        [(ngModel)]=\\\"user.firstName\\\">\\n      </div>\\n      <div class=\\\"form-control\\\">\\n        <label for=\\\"lastName\\\">Last Name: </label>\\n        <input type=\\\"text\\\"\\n        name=\\\"lastName\\\"\\n        #lastName=\\\"ngModel\\\"\\n        [(ngModel)]=\\\"user.lastName\\\">\\n      </div>\\n      <div class=\\\"form-control\\\">\\n        <label for=\\\"email\\\">Email: </label>\\n        <input ttype=\\\"email\\\"\\n        name=\\\"email\\\"\\n        #username=\\\"ngModel\\\"\\n        [(ngModel)]=\\\"user.email\\\">\\n      </div>\\n      <div class=\\\"form-control\\\">\\n        <label for=\\\"password\\\">Password: </label>\\n        <input type=\\\"password\\\"\\n        name=\\\"password\\\"\\n        #password=\\\"ngModel\\\"\\n        [(ngModel)]=\\\"user.password\\\"\\n        validateEqual='confirmPassword'\\n        reverse='true'\\n        minlength=\\\"8\\\">\\n      </div>\\n      <div class=\\\"form-control\\\">\\n        <label for=\\\"confirmPassword\\\">Confirm Password: </label>\\n        <input type=\\\"password\\\"\\n        name='confirmPassword'\\n        [ngModel]='user.confirmPassword'\\n        required validateEqual='password'\\n        #confirmPassword=\\\"ngModel\\\">\\n      </div>\\n      <div class=\\\"form-control\\\">\\n        <button *ngIf='register.valid'>Register</button>\\n      </div>\\n    </fieldset>\\n  </form>\\n</div>\\n\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\nimport { User } from '../models';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit, OnDestroy {\n  user = new User();\n  sub: Subscription;\n  registrationErrors: string[] = [];\n\n  constructor(\n    private readonly auth: AuthService,\n    private readonly router: Router\n  ) { }\n\n  ngOnInit() {}\n\n  onSubmit(event: Event, user: User) {\n    event.preventDefault();\n    this.sub = this.auth.register(user).subscribe(\n      loggedUser => {\n        console.log(loggedUser);\n        this.router.navigateByUrl('dashboard');\n      },\n      error => {\n        console.log(error);\n        this.handleErrors(error.error);\n      }\n    );\n  }\n\n  ngOnDestroy() {\n    if (this.sub) {\n      this.sub.unsubscribe();\n    }\n  }\n\n  private handleErrors(error: string | string[]) {\n    this.registrationErrors = Array.isArray(error) ? error : [error];\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { CookieService } from 'ngx-cookie';\nimport { User } from './../models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private readonly base = '/api/auth';\n  isAuthed$ = new BehaviorSubject(this.isAuthed());\n\n  constructor(\n    private readonly http: HttpClient,\n    private readonly cookieService: CookieService\n  ) { }\n\n  login(user: User): Observable<User> {\n    return this.http\n      .post<User>(`${this.base}/login`, user)\n      .pipe(tap(() => this.isAuthed$.next(true)));\n  }\n\n  register(user: User): Observable<User> {\n    return this.http\n      .post<User>(`${this.base}/register`, user)\n      .pipe(tap(() => this.isAuthed$.next(true)));\n  }\n\n  logout(): Observable<void> {\n    return this.http\n      .delete<void>(`${this.base}/logout`)\n      .pipe(tap(() => this.isAuthed$.next(false)));\n  }\n\n  isAuthed(): boolean {\n    const expired = parseInt(this.cookieService.get('expiration'), 10);\n    const userID = this.cookieService.get('userID');\n    const session = this.cookieService.get('session');\n\n    return Boolean(expired && session && userID && expired > Date.now());\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { Post } from './../models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostService {\n  private readonly base = '/api/post';\n  constructor(\n    private readonly http: HttpClient\n  ) { }\n\n  addPost(post: Post): Observable<Post> {\n    return this.http\n      .post<Post>(`${this.base}/new/post`, post);\n  }\n\n  getPosts(): Observable<Post[]> {\n    return this.http\n      .get<Post[]>(this.base);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}